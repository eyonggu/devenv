#set prefix to C-a as C-b is scroll page up
set-option -g prefix C-a

# 256 colors for vim
set -g default-terminal "screen-256color"

# Start window numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Cycle panes with C-a C-a
unbind ^A
bind ^A select-pane -t :.+

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Mouse works as expected
set-option -g mouse on

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use the system clipboard
#set-option -g default-command "reattach-to-user-namespace -l bash"

# Clear the pane and it's history
#  bind -n C-k send-keys C-l \; clear-history

# smart pane switching with awareness of vim splits
#  bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#  bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#  bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#  bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#  bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# C-l is taken over by vim style pane navigation
#  bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-selection


# Remap slit windows keys
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

#Use Prefix + a to jump to start of line
bind-key a send-prefix
